[{"/Users/abreeza/Projects/surveys/my-app/src/App.js":"1","/Users/abreeza/Projects/surveys/my-app/src/components/Login.js":"2","/Users/abreeza/Projects/surveys/my-app/src/utils/index.js":"3","/Users/abreeza/Projects/surveys/my-app/src/components/shared/Navbar.js":"4","/Users/abreeza/Projects/surveys/my-app/src/components/Dashboard/index.js":"5","/Users/abreeza/Projects/surveys/my-app/src/index.js":"6","/Users/abreeza/Projects/surveys/my-app/src/components/Dashboard/SurveyList.js":"7","/Users/abreeza/Projects/surveys/my-app/src/apis/mutations/useLogin.js":"8"},{"size":943,"mtime":1609957265801,"results":"9","hashOfConfig":"10"},{"size":1849,"mtime":1609955719206,"results":"11","hashOfConfig":"10"},{"size":1017,"mtime":1609955694043,"results":"12","hashOfConfig":"10"},{"size":414,"mtime":1609957249937,"results":"13","hashOfConfig":"10"},{"size":1176,"mtime":1609957257816,"results":"14","hashOfConfig":"10"},{"size":506,"mtime":1609697648954,"results":"15","hashOfConfig":"10"},{"size":130,"mtime":1606818270149,"results":"16","hashOfConfig":"10"},{"size":470,"mtime":1610121311947,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"q7qnt9",{"filePath":"20","messages":"21","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":1,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/abreeza/Projects/surveys/my-app/src/App.js",[],"/Users/abreeza/Projects/surveys/my-app/src/components/Login.js",["34","35","36"],"/Users/abreeza/Projects/surveys/my-app/src/utils/index.js",[],"/Users/abreeza/Projects/surveys/my-app/src/components/shared/Navbar.js",[],"/Users/abreeza/Projects/surveys/my-app/src/components/Dashboard/index.js",["37","38"],"/Users/abreeza/Projects/surveys/my-app/src/index.js",[],"/Users/abreeza/Projects/surveys/my-app/src/components/Dashboard/SurveyList.js",[],"/Users/abreeza/Projects/surveys/my-app/src/apis/mutations/useLogin.js",["39","40"],{"ruleId":"41","severity":1,"message":"42","line":8,"column":9,"nodeType":"43","messageId":"44","endLine":8,"endColumn":20},{"ruleId":"41","severity":1,"message":"45","line":10,"column":19,"nodeType":"43","messageId":"44","endLine":10,"endColumn":23},{"ruleId":"41","severity":1,"message":"46","line":10,"column":25,"nodeType":"43","messageId":"44","endLine":10,"endColumn":30},{"ruleId":"41","severity":1,"message":"47","line":9,"column":11,"nodeType":"43","messageId":"44","endLine":9,"endColumn":20},{"ruleId":"48","severity":1,"message":"49","line":12,"column":13,"nodeType":"50","endLine":24,"endColumn":4},{"ruleId":"51","severity":2,"message":"52","line":10,"column":9,"nodeType":"43","messageId":"53","endLine":10,"endColumn":16},{"ruleId":"41","severity":1,"message":"54","line":13,"column":37,"nodeType":"43","messageId":"44","endLine":13,"endColumn":44},"no-unused-vars","'queryClient' is assigned a value but never used.","Identifier","unusedVar","'data' is assigned a value but never used.","'error' is assigned a value but never used.","'templates' is assigned a value but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","no-restricted-globals","Unexpected use of 'history'.","defaultMessage","'message' is assigned a value but never used."]